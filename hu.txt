 

 state = [players_eur,pot,which_turn,call_ammount,legal_actions]
  

 f(state,input) = next_state


 f(s,a)

  action in [raise,bet] -->
   players[which_turn]-=ammount,
   call_ammount = ammount.


  action = fold -->
   players[!which_turn]+=pot,return round


  action = call -->
   players[which_turn]-=call_ammount

  
  action = check ---> ....


  which_turn != which_turn
  pot+=ammount

  legal_actions = action in [bet,raise] -- [call, fold, raise]
                  action in [check] -- [bet,check]


 
 while(s=f(s,a) != new_round);
  switch_blinds,goto 0;

pattern [FSM [FSM] ] nested FSM.. implement






  



                  


 


  
